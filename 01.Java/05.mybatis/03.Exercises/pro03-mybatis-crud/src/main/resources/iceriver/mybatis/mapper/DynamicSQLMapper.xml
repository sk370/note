<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="iceriver.mybatis.mapper.DynamicSQLMapper">
    <resultMap id="empResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="gender" column="sex"></result>
        <result property="email" column="email"></result>
    </resultMap>
<!--    List<Emp> getEmpByCondition(Emp emp);-->
    <!--
    <select id="getEmpByCondition" resultMap="empResultMap">
        select * from t_emp where 1=1
        <if test="empName != null and empName != ''">
            and emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            or sex = #{gender}
        </if>
        <if test="email != null and email != ''">
            and email = #{email}
        </if>
    </select>
    -->
    <!--
    <select id="getEmpByCondition" resultMap="empResultMap">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                and emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                or sex = #{gender}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </where>
    </select>
    -->
    <select id="getEmpByCondition" resultMap="empResultMap">
        select * from t_emp
        <trim prefix="where" prefixOverrides="and|or">
            <if test="empName != null and empName != ''">
                and emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                or sex = #{gender}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
        </trim>
    </select>


    <!--List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultMap="empResultMap">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    sex = #{gender}
                </when>
                <when test="email != null and email != ''">
                    email = #{email}
                </when>
                <otherwise>
                    did=1
                </otherwise>
            </choose>
        </where>
    </select>

    <!--int deleteMoreByArray(@Param("eids") Integer[] eids);-->
    <!--   -->
    <delete id="deleteMoreByArray">
        delete from t_emp where eid in
        (
            <foreach collection="eids" item="eid" separator=",">
                #{eid}
            </foreach>
        )
    </delete>


    <!--
    <delete id="deleteMoreByArray">
        delete from t_emp where eid in
        <foreach collection="eids" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>
    </delete>
    -->
    <!--
       <delete id="deleteMoreByArray">
           delete from t_emp where
           <foreach collection="eids" item="eid" separator="or">
               eid=#{eid}
           </foreach>
       </delete>
      -->
       <!--int insertMoreByList(@Param("emps") List<Emp> emps);-->
    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},#{emp.email},null)
        </foreach>
    </insert>
</mapper>